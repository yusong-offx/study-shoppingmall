// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/product/{name}/{stock}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Items Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "product stock",
                        "name": "stock",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/test": {
            "get": {
                "description": "Test get list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Test List",
                "responses": {}
            }
        },
        "/test1": {
            "get": {
                "description": "Test get list",
                "tags": [
                    "Test"
                ],
                "summary": "Test List",
                "responses": {}
            }
        },
        "/user/info/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get User Info from DB",
                "tags": [
                    "User"
                ],
                "summary": "Get User Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/user/login": {
            "post": {
                "description": "Check ID and Password\nPassword secure by bcrypt",
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "ID and Password",
                        "name": "ID\u0026PWD",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.LoginInfo"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/signup": {
            "post": {
                "description": "Post user info for sign up into DB",
                "tags": [
                    "User"
                ],
                "summary": "Sign up",
                "parameters": [
                    {
                        "description": "User infomation",
                        "name": "INFO",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/vender/login": {
            "post": {
                "description": "Check ID and Password\nPassword secure by bcrypt",
                "tags": [
                    "Vender"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "ID and Password",
                        "name": "ID\u0026PWD",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.LoginInfo"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/vender/signup": {
            "post": {
                "description": "vender sign up",
                "tags": [
                    "Vender"
                ],
                "summary": "vender sign up",
                "parameters": [
                    {
                        "description": "vender info",
                        "name": "INFO",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vender.Vender"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "user.User": {
            "type": "object",
            "properties": {
                "addr": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "utils.LoginInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "vender.Vender": {
            "type": "object",
            "properties": {
                "addr": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "OAuth protects our entity endpoints",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Fiber Example API",
	Description:      "This is a sample swagger for Fiber",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
