basePath: /
definitions:
  user.User:
    properties:
      addr:
        type: string
      email:
        type: string
      id:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  utils.LoginInfo:
    properties:
      id:
        type: string
      password:
        type: string
    type: object
  vender.Vender:
    properties:
      addr:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      url:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /product/{name}/{stock}:
    get:
      parameters:
      - description: product name
        in: path
        name: name
        required: true
        type: string
      - description: product stock
        in: path
        name: stock
        required: true
        type: string
      responses: {}
      summary: Get Items Info
      tags:
      - Product
  /test:
    get:
      description: Test get list
      produces:
      - application/json
      responses: {}
      summary: Test List
      tags:
      - Test
  /test1:
    get:
      description: Test get list
      responses: {}
      summary: Test List
      tags:
      - Test
  /user/info/{id}:
    get:
      description: Get User Info from DB
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get User Info
      tags:
      - User
  /user/login:
    post:
      description: |-
        Check ID and Password
        Password secure by bcrypt
      parameters:
      - description: ID and Password
        in: body
        name: ID&PWD
        required: true
        schema:
          $ref: '#/definitions/utils.LoginInfo'
      responses: {}
      summary: Login
      tags:
      - User
  /user/signup:
    post:
      description: Post user info for sign up into DB
      parameters:
      - description: User infomation
        in: body
        name: INFO
        required: true
        schema:
          $ref: '#/definitions/user.User'
      responses: {}
      summary: Sign up
      tags:
      - User
  /vender/login:
    post:
      description: |-
        Check ID and Password
        Password secure by bcrypt
      parameters:
      - description: ID and Password
        in: body
        name: ID&PWD
        required: true
        schema:
          $ref: '#/definitions/utils.LoginInfo'
      responses: {}
      summary: Login
      tags:
      - Vender
  /vender/signup:
    post:
      description: vender sign up
      parameters:
      - description: vender info
        in: body
        name: INFO
        required: true
        schema:
          $ref: '#/definitions/vender.Vender'
      responses: {}
      summary: vender sign up
      tags:
      - Vender
securityDefinitions:
  ApiKeyAuth:
    description: OAuth protects our entity endpoints
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
